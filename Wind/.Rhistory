locations = c('Bird_Island','Midway')
library(ggplot2)
library(readxl)
# library(Matrix)
library(lme4)
library(stringr)
library(dplyr)
library(mgcv)
# library(gamm4)
library(mgcViz)
library(gridExtra)
library(patchwork)
library(gratia)
GD_dir <- "/Users/ian/Library/CloudStorage/GoogleDrive-ian.maywar@stonybrook.edu/My Drive/Thorne Lab Shared Drive/Data/Albatross/"
fullmeta <- read_excel(paste0(GD_dir,"metadata/Full_Metadata.xlsx"))
# Combine all files across field seasons and locations -------------------------
m_all <- 0
# # LOAD m_all
m_all_NoImmTrim <- read.csv("/Users/ian/Desktop/m_all_NoImmTrim.csv")
m_all_Trim <- read.csv("/Users/ian/Desktop/m_all_Trim.csv")
m_all <- m_all_NoImmTrim
# Categorize BWAs
m_all <- m_all %>% mutate(BWA_cat = case_when(bwa<=45 ~ "head",
bwa>45 & bwa<135 ~ "cross",
bwa>=135 ~ "tail"))
# Turn variables into factors
m_all$id <- as.factor(m_all$id)
m_all$tripID <- as.factor(m_all$tripID)
m_all$szn <- as.factor(m_all$szn)
m_all$loc <- as.factor(m_all$loc)
m_all$Trip_Type <- as.factor(m_all$Trip_Type)
m_all$spp <- as.factor(m_all$spp)
m_all$BWA_cat <- as.factor(m_all$BWA_cat)
# Re-order spp groups
m_all$spp <- factor(m_all$spp , levels=c("BBAL", "GHAL", "WAAL", "BFAL", "LAAL"))
# Split data between species
m_BBAL <- m_all %>% filter(spp=="BBAL")
m_GHAL <- m_all %>% filter(spp=="GHAL")
m_WAAL <- m_all %>% filter(spp=="WAAL")
m_LAAL <- m_all %>% filter(spp=="LAAL")
m_BFAL <- m_all %>% filter(spp=="BFAL")
main_k <- 3
fac_k <- 3
GAM_BBAL_directional <- gam(formula = flaps ~ s(wind_vel,bs='tp',k=main_k,m=2) +
s(wind_vel,BWA_cat,bs='fs',k=fac_k,m=2) +
s(id,k=length(unique(m_BBAL$id)),bs="re"),
data = m_BBAL,
family = "poisson",
method = "REML")
GAM_GHAL_directional <- gam(formula = flaps ~ s(wind_vel,bs='tp',k=main_k,m=2) +
s(wind_vel,BWA_cat,bs='fs',k=fac_k,m=2) +
s(id,k=length(unique(m_GHAL$id)),bs="re"),
data = m_GHAL,
family = "poisson",
method = "REML")
GAM_BFAL_directional <- gam(formula = flaps ~ s(wind_vel,bs='tp',k=main_k,m=2) +
s(wind_vel,BWA_cat,bs='fs',k=fac_k,m=2) +
s(id,k=length(unique(m_BFAL$id)),bs="re"),
data = m_BFAL,
family = "poisson",
method = "REML")
GAM_LAAL_directional <- gam(formula = flaps ~ s(wind_vel,bs='tp',k=main_k,m=2) +
s(wind_vel,BWA_cat,bs='fs',k=fac_k,m=2) +
s(id,k=length(unique(m_LAAL$id)),bs="re"),
data = m_LAAL,
family = "poisson",
method = "REML")
smooth(GAM_BBAL_directional)
smooths(GAM_BBAL_directional)
ds_directional  <- rbind(data_slice(GAM_BBAL_directional, wind_vel = evenly(wind_vel, n = 100), id = unique(m_BBAL$id),
BWA_cat = unique(m_BBAL$BWA_cat)),
data_slice(GAM_GHAL_directional, wind_vel = evenly(wind_vel, n = 100), id = unique(m_GHAL$id),
BWA_cat = unique(m_GHAL$BWA_cat)),
data_slice(GAM_BFAL_directional, wind_vel = evenly(wind_vel, n = 100), id = unique(m_BFAL$id),
BWA_cat = unique(m_BFAL$BWA_cat)),
data_slice(GAM_LAAL_directional, wind_vel = evenly(wind_vel, n = 100), id = unique(m_LAAL$id),
BWA_cat = unique(m_LAAL$BWA_cat)))
ds_directional$BWA_cat <- factor(ds_directional$BWA_cat, levels=c("head", "cross", "tail"))
fv_directional <- rbind(fitted_values(GAM_BBAL_directional, data = ds_directional %>% filter(str_detect(id,"BBAL")), scale = "response"),
fitted_values(GAM_GHAL_directional, data = ds_directional %>% filter(str_detect(id,"GHAL")), scale = "response"),
fitted_values(GAM_BFAL_directional, data = ds_directional %>% filter(str_detect(id,"BFAL")), scale = "response"),
fitted_values(GAM_LAAL_directional, data = ds_directional %>% filter(str_detect(id,"LAAL")), scale = "response"))
fv_directional <- fv_directional %>% mutate(spp = substr(id,1,4))
fv_directional$spp <- factor(fv_directional$spp, levels=c("BBAL","GHAL","BFAL","LAAL"))
fv_directional_global <- rbind(fitted_values(GAM_BBAL_directional, data = ds_directional %>% filter(str_detect(id,"BBAL")), scale = "response",
terms = c("(Intercept)","s(wind_vel)","s(wind_vel,BWA_cat)")),
fitted_values(GAM_GHAL_directional, data = ds_directional %>% filter(str_detect(id,"GHAL")), scale = "response",
terms = c("(Intercept)","s(wind_vel)","s(wind_vel,BWA_cat)")),
fitted_values(GAM_BFAL_directional, data = ds_directional %>% filter(str_detect(id,"BFAL")), scale = "response",
terms = c("(Intercept)","s(wind_vel)","s(wind_vel,BWA_cat)")),
fitted_values(GAM_LAAL_directional, data = ds_directional %>% filter(str_detect(id,"LAAL")), scale = "response",
terms = c("(Intercept)","s(wind_vel)","s(wind_vel,BWA_cat)")))
fv_directional_global <- fv_directional_global %>% mutate(spp = substr(id,1,4))
fv_directional_global$spp <- factor(fv_directional_global$spp, levels=c("BBAL","GHAL","BFAL","LAAL"))
fv_directional %>% filter(spp=="BBAL") |>
ggplot(aes(x = wind_vel, y = fitted, color=id)) +
geom_line() +
# geom_point(m_BBAL,mapping=aes(wind_vel,flaps),color='black',alpha=0.1) +
geom_line(fv_directional_global %>% filter(spp=="BBAL"),mapping=aes(wind_vel,fitted),color='black',linewidth=1) +
geom_ribbon(fv_directional_global %>% filter(spp=="BBAL"),mapping=aes(ymin = lower, ymax = upper, y = NULL), alpha = 0.1,fill='black') +
facet_wrap(~BWA_cat,ncol=3) +
theme(legend.position="none")
# Look at domains of different IDs
for (fig_i in 1:length(unique(m_BBAL$id))) {
m_BBAL |>
ggplot(aes(wind_vel,flaps)) +
geom_point(color='black') +
geom_point(m_BBAL %>% filter(id==unique(m_BBAL$id)[fig_i]),mapping=aes(x=wind_vel,y=flaps),color='red')
readline(prompt="Press [enter] to continue")
}
# Look at domains of different IDs
for (fig_i in 1:5) {
m_BBAL |>
ggplot(aes(wind_vel,flaps)) +
geom_point(color='black') +
geom_point(m_BBAL %>% filter(id==unique(m_BBAL$id)[fig_i]),mapping=aes(x=wind_vel,y=flaps),color='red')
Sys.sleep(1)
readline(prompt="Press [enter] to continue")
}
fig_i=1
m_BBAL |>
ggplot(aes(wind_vel,flaps)) +
geom_point(color='black') +
geom_point(m_BBAL %>% filter(id==unique(m_BBAL$id)[fig_i]),mapping=aes(x=wind_vel,y=flaps),color='red')
View(m_BBAL)
fig_i=2
m_BBAL |>
ggplot(aes(wind_vel,flaps)) +
geom_point(color='black') +
geom_point(m_BBAL %>% filter(id==unique(m_BBAL$id)[fig_i]),mapping=aes(x=wind_vel,y=flaps),color='red')
m_BBAL |>
ggplot(aes(wind_vel,flaps)) +
geom_point(color='black') +
geom_point(m_BBAL %>% filter(id==unique(m_BBAL$id)[fig_i]),mapping=aes(x=wind_vel,y=flaps),color='red')
Sys.sleep(1)
readline(prompt="Press [enter] to continue")
fig_i=1
m_BBAL |>
ggplot(aes(wind_vel,flaps)) +
geom_point(color='black') +
geom_point(m_BBAL %>% filter(id==unique(m_BBAL$id)[fig_i]),mapping=aes(x=wind_vel,y=flaps),color='red')
Sys.sleep(1)
readline(prompt="Press [enter] to continue")
Sys.sleep(1)
# Look at domains of different IDs
for (fig_i in 1:length(unique(m_BBAL$id))) {
m_BBAL |>
ggplot(aes(wind_vel,flaps)) +
geom_point(color='black') +
geom_point(m_BBAL %>% filter(id==unique(m_BBAL$id)[fig_i]),mapping=aes(x=wind_vel,y=flaps),color='red') +
labs(title=fig_i)
Sys.sleep(1)
}
# Look at domains of different IDs
for (fig_i in 1:length(unique(m_BBAL$id))) {
print(m_BBAL |>
ggplot(aes(wind_vel,flaps)) +
geom_point(color='black') +
geom_point(m_BBAL %>% filter(id==unique(m_BBAL$id)[fig_i]),mapping=aes(x=wind_vel,y=flaps),color='red') +
labs(title=fig_i))
readline(prompt="Press [enter] to continue")
}
fv_directional %>% filter(spp=="BBAL") |>
ggplot(aes(x = wind_vel, y = fitted, color=id)) +
geom_line() +
# geom_point(m_BBAL,mapping=aes(wind_vel,flaps),color='black',alpha=0.1) +
geom_line(fv_directional_global %>% filter(spp=="BBAL"),mapping=aes(wind_vel,fitted),color='black',linewidth=1) +
geom_ribbon(fv_directional_global %>% filter(spp=="BBAL"),mapping=aes(ymin = lower, ymax = upper, y = NULL), alpha = 0.1,fill='black') +
facet_wrap(~BWA_cat,ncol=3) +
theme(legend.position="none")
